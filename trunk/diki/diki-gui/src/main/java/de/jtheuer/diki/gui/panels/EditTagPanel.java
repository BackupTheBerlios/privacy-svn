/**
 *     This file is part of Diki.
 *
 *     Copyright (C) 2009 jtheuer
 *     Please refer to the documentation for a complete list of contributors
 *
 *     Diki is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     Diki is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with Diki.  If not, see <http://www.gnu.org/licenses/>.
 */
/**
    (c) by Jan Torben Heuer <jan.heuer@uni-muenster.de

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/
 */
package de.jtheuer.diki.gui.panels;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.FocusListener;
import java.util.GregorianCalendar;
import java.util.Set;
import java.util.logging.Logger;

import javax.swing.*;
import javax.swing.text.JTextComponent;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.namespace.QName;

import org.openrdf.concepts.dc.DcResource;
import org.openrdf.elmo.sesame.SesameManager;

import uk.co.holygoat.tag.concepts.Tag;
import uk.co.holygoat.tag.concepts.Tagging;

import com.jidesoft.swing.JideSwingUtilities;
import com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl;

import de.jtheuer.diki.gui.utils.HtmlMetadataExtractor;
import de.jtheuer.diki.gui.utils.Log;
import de.jtheuer.diki.lib.NetworkConnection;
import de.jtheuer.jjcomponents.swing.*;
import de.jtheuer.jjcomponents.swing.components.JJMaxHeightTextField;
import de.jtheuer.jjcomponents.utils.ResourcesContainer;
import de.jtheuer.sesame.QNameURI;
import de.jtheuer.sesame.SimpleSet;

/**
 * 
 */

public class EditTagPanel extends JJDialog {
	/* autogenerated Logger */@SuppressWarnings("unused")
	private final static Logger LOGGER = Logger.getLogger(EditTagPanel.class.getName());

	private final static String TITLE = "Edit tag";

	private final static String DESCRIPTION = "Enter a valid uri, a title and optionally a description. You can add any tags you want to describe your resource. Press CTRL+SPACE for suggestins.";

	private URLPanel url;

	private JTextField title;

	private JTextArea description;

	private TagTablePanel table;

	private NetworkConnection connection;

	private String initial_url="";

	private String initial_title;

	private String initial_description;

	public EditTagPanel(JFrame parent, NetworkConnection connection) {
		this(parent,connection,"");
	}

	/**
	 * @param parent
	 * @param connection2
	 * @param url2
	 */
	public EditTagPanel(JFrame parent, NetworkConnection connection, String url) {
		this(parent,connection,url,"","");
	}

	/**
	 * @param parent
	 * @param connection
	 * @param urlstring
	 * @param title
	 * @param description
	 */
	public EditTagPanel(JFrame parent, NetworkConnection connection, String urlstring, String title, String description) {
		super(TITLE, DESCRIPTION, parent);
		this.connection = connection;

		this.initial_url = urlstring;
		this.initial_title = title;
		this.initial_description = description;
		
		JideSwingUtilities.globalCenterWindow(this);
		setSize(400,600);
		setVisible(true);
		toFront();
		setAlwaysOnTop(true);
		requestFocus();
	}

	private void saveTag() {
		SesameManager manager = connection.getSesame().getLocalStore().createManager();
		
		manager.getTransaction().begin();
		try {

			QName qname = connection.getNamespaceFactory().constructNamespace("tagging/", "" + url.getText().hashCode()).toQName();
			QName pageq = new QNameURI(url.getText()).toQName();

			Set<Tag> tags = table.getTags();
			DcResource page = manager.designate(DcResource.class, pageq);
			if(title.getText() != null) {
				page.setDcTitle(title.getText());
			}
			if(description.getText() != null) {
				page.setDcDescription(description.getText());
			}
			Tagging tagging = manager.designate(Tagging.class, qname);
			tagging.setTagsTaggedBy(SimpleSet.create(connection.getUserFactory().getLocalUser()));
			tagging.setTagsTaggedResources(SimpleSet.create(page));
			tagging.setTagsAssociatedTags(tags);
			tagging.setTagsTaggedOn(today());
			manager.getTransaction().commit();
			this.dispose();
		} catch (Exception e) {
			manager.getTransaction().rollback();
			Log.error(e);
		} finally {
			manager.close();
		}
	}

	/**
	 * @return the current time as a Set of {@link XMLGregorianCalendar}.
	 */
	private static Set<? extends XMLGregorianCalendar> today() {
		//get current time in current timezone
		GregorianCalendar cla = new GregorianCalendar();
		return SimpleSet.create(new XMLGregorianCalendarImpl(cla));
	}

	private void cancelEdit() {
		this.dispose();
	}

	@Override
	protected Action getOkAction() {
		return new JJAction(ResourcesContainer.OK) {
			public void actionPerformed(ActionEvent e) {
				saveTag();
			}
		};
	}

	@Override
	protected Action getCancelAction() {
		return new JJAction(ResourcesContainer.CANCEL) {
			public void actionPerformed(ActionEvent e) {
				cancelEdit();
			}
		};
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.jidesoft.dialog.StandardDialog#createContentPanel()
	 */
	@Override
	public JComponent createContentPanel() {

		JComponent pane = new JPanel();
		LayoutFactory.setBoxLayoutV(pane);
		LayoutFactory.setEmptyBorder(pane);

		JLabel label_url = new JLabel("url");
		url = new URLPanel(initial_url);

		JLabel label_title = new JLabel("title");
		title = new JJMaxHeightTextField(initial_title);

		JLabel label_description = new JLabel("description");
		description = new JTextArea(initial_description);
		description.setLineWrap(true);
		description.setWrapStyleWord(true);

		LayoutFactory.left(url, label_url, label_title, title, label_description, description);
		pane.add(label_url);
		pane.add(url);
		pane.add(label_title);
		pane.add(title);
		pane.add(label_description);
		pane.add(description);

		pane.add(Box.createVerticalStrut(10));

		table = new TagTablePanel(connection);
		table.setAlignmentX(Component.LEFT_ALIGNMENT);
		pane.add(table);

		pane.add(Box.createVerticalStrut(10));

		JPanel bpanel = getButtonPanel();
		bpanel.setAlignmentX(Component.LEFT_ALIGNMENT);
		pane.add(bpanel);

		/* add Focus listener to set title */
		HtmlMetadataExtractor.addFocusLostEventListener(url.getTextComponent(), title, description);
		
		return pane;
	}
}
